{"version":3,"sources":["components/Header/style.module.css","components/Button/index.tsx","components/Button/style.module.css","components/Footer/style.module.css","components/Container/style.module.css","components/Container/index.tsx","components/Loader/index.tsx","components/Loader/style.module.css","components/Header/index.tsx","components/Footer/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Button","children","onClick","variant","size","color","icon","className","cx","styles","button","Container","pageCenter","fullWidth","background","bg","container","Loader","loader","Header","useState","menuIsOpen","setMenuIsOpen","scrolled","setScrolled","currentRoute","useLocation","handleScroll","hasScrolled","window","scrollY","useEffect","addEventListener","removeEventListener","navContainer","header","pathname","navLink","to","logo","navs","menuButton","mobileNav","Footer","footer","bottomFooter","copyright","href","socialMedia","location","Home","React","lazy","Contact","Portofolio","App","PageLoadIndicator","exact","path","fallback","Boolean","hostname","match","ReactGA","initialize","pageview","search","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iFACAA,EAAOC,QAAU,CAAC,aAAe,4BAA4B,OAAS,sBAAsB,KAAO,oBAAoB,KAAO,oBAAoB,UAAY,yBAAyB,QAAU,uBAAuB,WAAa,0BAA0B,SAAW,0B,iGC6C3PC,IAxBiB,SAAC,GAO1B,IANLC,EAMI,EANJA,SACAC,EAKI,EALJA,QACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,MACAC,EACI,EADJA,KAEA,OACE,4BACEJ,QAASA,EACTK,UAAWC,IACTC,IAAOC,OACPD,IAAON,GACPM,IAAOL,GACPK,IAAOJ,GAJI,eAKRI,IAAOH,KAAOA,KAGlBL,K,kBCxCPH,EAAOC,QAAU,CAAC,OAAS,sBAAsB,EAAI,iBAAiB,EAAI,iBAAiB,EAAI,iBAAiB,KAAO,oBAAoB,KAAO,oBAAoB,QAAU,uBAAuB,YAAc,2BAA2B,MAAQ,qBAAqB,KAAO,sB,iBCApRD,EAAOC,QAAU,CAAC,OAAS,sBAAsB,aAAe,4BAA4B,UAAY,yBAAyB,YAAc,6B,gBCA/ID,EAAOC,QAAU,CAAC,UAAY,yBAAyB,WAAa,0BAA0B,UAAY,yBAAyB,MAAQ,uB,gGCiC5HY,IArBoB,SAAC,GAK7B,IAJLV,EAII,EAJJA,SACAW,EAGI,EAHJA,WACAC,EAEI,EAFJA,UACAC,EACI,EADJA,WAEMC,EAAKD,GAAcL,IAAOK,GAChC,OACE,yBACEP,UAAWC,IACTC,IAAOO,UACPD,EAFW,eAGRN,IAAOG,WAAaA,GAHZ,eAIRH,IAAOI,UAAYA,KAGvBZ,K,+BC7BP,uEAGe,SAASgB,IACtB,OAAO,yBAAKV,UAAWE,IAAOS,W,mBCHhCpB,EAAOC,QAAU,CAAC,OAAS,sBAAsB,KAAO,sB,wPCSzC,SAASoB,IAAU,IAAD,EACKC,oBAAS,GADd,mBACxBC,EADwB,KACZC,EADY,OAECF,oBAAS,GAFV,mBAExBG,EAFwB,KAEdC,EAFc,KAGzBC,EAAeC,cAEfC,EAAe,WACnB,IAAMC,EAAcC,OAAOC,QAAU,EACrCN,EAAYI,IAYd,OATAG,qBAAU,WAER,OADAF,OAAOG,iBAAiB,SAAUL,GAAc,GACzCE,OAAOI,oBAAoB,SAAUN,KAC3C,IAEHI,qBAAU,WACRT,GAAc,KACb,CAACG,IAGF,yBAAKlB,UAAWE,IAAOyB,cACrB,yBAAK3B,UAAWC,IAAGC,IAAO0B,OAAR,eAAmB1B,IAAOc,SAAWA,KAC1B,MAA1BE,EAAaW,SACZ,kBAAC,IAAD,CAAS7B,UAAWE,IAAO4B,QAASC,GAAG,KACrC,yBAAK/B,UAAWE,IAAO8B,MAAvB,iBAGF,8BAEF,yBAAKhC,UAAWE,IAAO+B,MACrB,kBAAC,IAAD,CAASjC,UAAWE,IAAO4B,QAASC,GAAG,KAAvC,QAGA,kBAAC,IAAD,CAAS/B,UAAWE,IAAO4B,QAASC,GAAG,eAAvC,cAGA,kBAAC,IAAD,CAAS/B,UAAWE,IAAO4B,QAASC,GAAG,YAAvC,YAIF,yBAAK/B,UAAWE,IAAOgC,YACrB,kBAACzC,EAAA,EAAD,CACEG,QAAQ,cACRC,KAAK,IACLC,MAAM,UACNH,QAAS,kBAAMoB,GAAeD,IAC9Bf,MAAI,GAEJ,kBAAC,IAAD,SAILe,GACC,yBAAKd,UAAWE,IAAOiC,WACrB,kBAAC,IAAD,CAASnC,UAAWE,IAAO4B,QAASC,GAAG,KAAvC,QAGA,kBAAC,IAAD,CAAS/B,UAAWE,IAAO4B,QAASC,GAAG,eAAvC,cAGA,kBAAC,IAAD,CAAS/B,UAAWE,IAAO4B,QAASC,GAAG,YAAvC,a,6BChEK,SAASK,IACtB,OACE,yBAAKpC,UAAWE,IAAOmC,QACrB,yBAAKrC,UAAWE,IAAOoC,cACrB,yBAAKtC,UAAWE,IAAOqC,WACrB,sDAC2B,IACzB,uBAAGC,KAAK,sCACN,mDAIN,yBAAKxC,UAAWE,IAAOuC,aACrB,kBAAChD,EAAA,EAAD,CACEG,QAAQ,cACRC,KAAK,IACLC,MAAM,QACNH,QAAS,kBACN2B,OAAOoB,SAASF,KAAO,sCAE1BzC,MAAI,GAEJ,kBAAC,IAAD,OAEF,kBAACN,EAAA,EAAD,CACEG,QAAQ,cACRC,KAAK,IACLC,MAAM,QACNH,QAAS,kBACN2B,OAAOoB,SAASF,KAAO,wCAE1BzC,MAAI,GAEJ,kBAAC,IAAD,OAEF,kBAACN,EAAA,EAAD,CACEG,QAAQ,cACRC,KAAK,IACLC,MAAM,QACNH,QAAS,kBACN2B,OAAOoB,SAASF,KACf,6CAEJzC,MAAI,GAEJ,kBAAC,IAAD,OAEF,kBAACN,EAAA,EAAD,CACEG,QAAQ,cACRC,KAAK,IACLC,MAAM,QACNH,QAAS,kBACN2B,OAAOoB,SAASF,KAAO,gCAE1BzC,MAAI,GAEJ,kBAAC,IAAD,U,oBC9CN4C,G,kBAAOC,IAAMC,MAAK,kBAAM,iCACxBC,EAAUF,IAAMC,MAAK,kBAAM,gCAC3BE,EAAaH,IAAMC,MAAK,kBAAM,gCAwCrBG,MAtCf,WACE,IAAMC,EACJ,kBAAC7C,EAAA,EAAD,CAAWC,YAAU,EAACE,WAAW,SAC/B,kBAACG,EAAA,EAAD,OAGJ,OACE,yBAAKV,UAAU,OACb,kBAAC,IAAD,KACE,kBAACY,EAAD,MACA,yBAAKZ,UAAU,QACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOkD,OAAK,EAACC,KAAK,KAChB,kBAAC,WAAD,CAAUC,SAAUH,GAClB,kBAACN,EAAD,QAGJ,kBAAC,IAAD,CAAOQ,KAAK,YACV,kBAAC,WAAD,CAAUC,SAAUH,GAClB,kBAACH,EAAD,QAGJ,kBAAC,IAAD,CAAOK,KAAK,eACV,kBAAC,WAAD,CAAUC,SAAUH,GAClB,kBAACF,EAAD,QAGJ,kBAAC,IAAD,CAAOI,KAAK,KACV,kBAAC,IAAD,CAAUpB,GAAG,SAInB,kBAACK,EAAD,SCxCYiB,QACW,cAA7B/B,OAAOoB,SAASY,UAEe,UAA7BhC,OAAOoB,SAASY,UAEhBhC,OAAOoB,SAASY,SAASC,MACvB,2D,YCZNC,IAAQC,WAAW,kBACnBD,IAAQE,SAASpC,OAAOoB,SAASb,SAAWP,OAAOoB,SAASiB,QAE5DC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD8HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.32f7c4b6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navContainer\":\"style_navContainer__3ZwtD\",\"header\":\"style_header__1Gd7V\",\"logo\":\"style_logo__2PKvg\",\"navs\":\"style_navs__NjLds\",\"mobileNav\":\"style_mobileNav__1ARt8\",\"navLink\":\"style_navLink__3mXdu\",\"menuButton\":\"style_menuButton__1Ib6n\",\"scrolled\":\"style_scrolled__2WJSW\"};","import React from \"react\";\r\n\r\nimport cx from \"classnames\";\r\n\r\nimport styles from \"./style.module.css\";\r\n\r\ntype Props = {\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n  variant: \"fill\" | \"transparent\";\r\n  size: \"s\" | \"m\" | \"l\";\r\n  color:\r\n    | \"primary\"\r\n    | \"secondary\"\r\n    | \"info\"\r\n    | \"success\"\r\n    | \"warning\"\r\n    | \"danger\"\r\n    | \"light\"\r\n    | \"dark\";\r\n  icon?: boolean;\r\n};\r\n\r\nconst Button: React.FC<Props> = ({\r\n  children,\r\n  onClick,\r\n  variant,\r\n  size,\r\n  color,\r\n  icon,\r\n}) => {\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      className={cx(\r\n        styles.button,\r\n        styles[variant],\r\n        styles[size],\r\n        styles[color],\r\n        { [styles.icon]: icon }\r\n      )}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"style_button__2DRaZ\",\"s\":\"style_s__2SOXc\",\"m\":\"style_m__6FpRj\",\"l\":\"style_l__1bTnQ\",\"icon\":\"style_icon__1Rahy\",\"fill\":\"style_fill__3IQBk\",\"primary\":\"style_primary__33sRt\",\"transparent\":\"style_transparent__26Z5l\",\"light\":\"style_light__1mzvg\",\"dark\":\"style_dark__2Datp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"style_footer__3p721\",\"bottomFooter\":\"style_bottomFooter__uZmUO\",\"copyright\":\"style_copyright__3S3Rm\",\"socialMedia\":\"style_socialMedia__d_p4K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__NZlMP\",\"pageCenter\":\"style_pageCenter__2e1Rp\",\"fullWidth\":\"style_fullWidth__3Rlsm\",\"light\":\"style_light__2203w\"};","import React, { ReactNode } from \"react\";\r\n\r\nimport cx from \"classnames\";\r\n\r\nimport styles from \"./style.module.css\";\r\n\r\ntype Props = {\r\n  children: ReactNode;\r\n  pageCenter?: boolean;\r\n  fullWidth?: boolean;\r\n  background?: \"light\";\r\n};\r\n\r\nconst Container: React.FC<Props> = ({\r\n  children,\r\n  pageCenter,\r\n  fullWidth,\r\n  background,\r\n}) => {\r\n  const bg = background && styles[background];\r\n  return (\r\n    <div\r\n      className={cx(\r\n        styles.container,\r\n        bg,\r\n        { [styles.pageCenter]: pageCenter },\r\n        { [styles.fullWidth]: fullWidth }\r\n      )}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Container;\r\n","import React from \"react\";\r\nimport styles from \"./style.module.css\";\r\n\r\nexport default function Loader() {\r\n  return <div className={styles.loader}></div>;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"style_loader__oGAMJ\",\"spin\":\"style_spin__rL7vv\"};","import React, { useState, useEffect } from \"react\";\r\n\r\nimport cx from \"classnames\";\r\n\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\nimport { MdMenu } from \"react-icons/md\";\r\n\r\nimport styles from \"./style.module.css\";\r\nimport Button from \"../Button\";\r\n\r\nexport default function Header() {\r\n  const [menuIsOpen, setMenuIsOpen] = useState(false);\r\n  const [scrolled, setScrolled] = useState(false);\r\n  const currentRoute = useLocation();\r\n\r\n  const handleScroll = () => {\r\n    const hasScrolled = window.scrollY > 0;\r\n    setScrolled(hasScrolled);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScroll, true);\r\n    return window.removeEventListener(\"scroll\", handleScroll);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setMenuIsOpen(false);\r\n  }, [currentRoute]);\r\n\r\n  return (\r\n    <div className={styles.navContainer}>\r\n      <div className={cx(styles.header, { [styles.scrolled]: scrolled })}>\r\n        {currentRoute.pathname !== \"/\" ? (\r\n          <NavLink className={styles.navLink} to=\"/\">\r\n            <div className={styles.logo}>Alif Sabrani</div>\r\n          </NavLink>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        <div className={styles.navs}>\r\n          <NavLink className={styles.navLink} to=\"/\">\r\n            Home\r\n          </NavLink>\r\n          <NavLink className={styles.navLink} to=\"/portofolio\">\r\n            Portofolio\r\n          </NavLink>\r\n          <NavLink className={styles.navLink} to=\"/contact\">\r\n            Contact\r\n          </NavLink>\r\n        </div>\r\n        <div className={styles.menuButton}>\r\n          <Button\r\n            variant=\"transparent\"\r\n            size=\"l\"\r\n            color=\"primary\"\r\n            onClick={() => setMenuIsOpen(!menuIsOpen)}\r\n            icon\r\n          >\r\n            <MdMenu></MdMenu>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      {menuIsOpen && (\r\n        <div className={styles.mobileNav}>\r\n          <NavLink className={styles.navLink} to=\"/\">\r\n            Home\r\n          </NavLink>\r\n          <NavLink className={styles.navLink} to=\"/portofolio\">\r\n            Portofolio\r\n          </NavLink>\r\n          <NavLink className={styles.navLink} to=\"/contact\">\r\n            Contact\r\n          </NavLink>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { FaGithub, FaFacebook, FaLinkedin, FaEnvelope } from \"react-icons/fa\";\r\n\r\nimport styles from \"./style.module.css\";\r\nimport Button from \"../Button\";\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <div className={styles.footer}>\r\n      <div className={styles.bottomFooter}>\r\n        <div className={styles.copyright}>\r\n          <div>\r\n            Copyright &copy; 2020 by{\" \"}\r\n            <a href=\"https://www.github.com/alifsabrani\">\r\n              <strong>Alif Sabrani</strong>\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div className={styles.socialMedia}>\r\n          <Button\r\n            variant=\"transparent\"\r\n            size=\"m\"\r\n            color=\"light\"\r\n            onClick={() =>\r\n              (window.location.href = \"https://www.github.com/alifsabrani\")\r\n            }\r\n            icon\r\n          >\r\n            <FaGithub></FaGithub>\r\n          </Button>\r\n          <Button\r\n            variant=\"transparent\"\r\n            size=\"m\"\r\n            color=\"light\"\r\n            onClick={() =>\r\n              (window.location.href = \"https://www.facebook.com/alifsabrani\")\r\n            }\r\n            icon\r\n          >\r\n            <FaFacebook></FaFacebook>\r\n          </Button>\r\n          <Button\r\n            variant=\"transparent\"\r\n            size=\"m\"\r\n            color=\"light\"\r\n            onClick={() =>\r\n              (window.location.href =\r\n                \"https://www.linkedin.com/in/alif-sabrani/\")\r\n            }\r\n            icon\r\n          >\r\n            <FaLinkedin></FaLinkedin>\r\n          </Button>\r\n          <Button\r\n            variant=\"transparent\"\r\n            size=\"m\"\r\n            color=\"light\"\r\n            onClick={() =>\r\n              (window.location.href = \"mailto:alifsabrani@gmail.com\")\r\n            }\r\n            icon\r\n          >\r\n            <FaEnvelope></FaEnvelope>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Suspense } from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\nimport Loader from \"./components/Loader\";\r\nimport Container from \"./components/Container\";\r\n\r\nimport \"./styles/fonts.css\";\r\nimport \"./styles/index.css\";\r\nimport \"./styles/typography.css\";\r\n\r\nconst Home = React.lazy(() => import(\"./pages/home\"));\r\nconst Contact = React.lazy(() => import(\"./pages/contact\"));\r\nconst Portofolio = React.lazy(() => import(\"./pages/portofolio\"));\r\n\r\nfunction App() {\r\n  const PageLoadIndicator = (\r\n    <Container pageCenter background=\"light\">\r\n      <Loader></Loader>\r\n    </Container>\r\n  );\r\n  return (\r\n    <div className=\"app\">\r\n      <Router>\r\n        <Header></Header>\r\n        <div className=\"page\">\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Suspense fallback={PageLoadIndicator}>\r\n                <Home />\r\n              </Suspense>\r\n            </Route>\r\n            <Route path=\"/contact\">\r\n              <Suspense fallback={PageLoadIndicator}>\r\n                <Contact></Contact>\r\n              </Suspense>\r\n            </Route>\r\n            <Route path=\"/portofolio\">\r\n              <Suspense fallback={PageLoadIndicator}>\r\n                <Portofolio></Portofolio>\r\n              </Suspense>\r\n            </Route>\r\n            <Route path=\"*\">\r\n              <Redirect to=\"/\"></Redirect>\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n        <Footer></Footer>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport ReactGA from \"react-ga\";\r\n\r\nReactGA.initialize(\"UA-176277222-1\");\r\nReactGA.pageview(window.location.pathname + window.location.search);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}